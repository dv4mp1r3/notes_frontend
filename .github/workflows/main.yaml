---
name: Notes Frontend CI

on:
  workflow_dispatch:

  push:
    branches:
      - master

jobs:
  hadolint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Linting Main Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          ignore: "DL3007,DL3008"

  build-notes-frontend-image:
    needs: hadolint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        IMAGE_TAG: [latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        env:
          DOCKER_HUB_USER: "dv4mp1r3"
          DOCKER_HUB_REPOSITORY: "notes-frontend"
          IMAGE_TAG: ${{ matrix.IMAGE_TAG }}
        with:
          push: true
          context: .
          tags: ${{ env.DOCKER_HUB_USER }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }}
          file: Dockerfile
          cache-from: type=gha,ref=${{ env.DOCKER_HUB_USER }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-to: type=gha,ref=${{ env.DOCKER_HUB_USER }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }},mode=max

  deploy-notes-frontend-image:
    needs: build-notes-frontend-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Prepare SSH for connection
        run: |
          mkdir -p ~/.ssh \
          && touch ~/.ssh/id_rsa \
          && chmod 600 ~/.ssh/id_rsa

      - name: Add Private SSH key from Secrets
        run: |
          cat << EOF > ~/.ssh/id_rsa
          ${{ secrets.FRONTEND_HOST_PRIVATE_SSH }}
          EOF

      - name: Create .env file from Secrets
        run: |
          cat << EOF > .env
          ${{ secrets.FRONTEND_ENV_FILE }}
          EOF

      - name: Deploy project on the Remote Server
        run: |
          rsync -crvz --delete -e 'ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no' .env docker-compose.yaml \
          ${{ secrets.FRONTEND_HOST_USER }}@${{ secrets.FRONTEND_HOST_IP }}:${{ secrets.FRONTEND_HOST_PATH }} --chown=${{ secrets.FRONTEND_HOST_USER }}:${{ secrets.FRONTEND_HOST_USER }}

      - name: Deploy project on the Remote Server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.FRONTEND_HOST_USER }}@${{ secrets.FRONTEND_HOST_IP }} "cd ${{ secrets.FRONTEND_HOST_PATH }} \
          && docker compose pull \
          && docker compose up -d --force-recreate \
          && docker container prune --force \
          && docker image prune --force --all"